datasource db_postgres {
  provider = "postgresql"
  url      = env("DATABASE_POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Album {
  id           Int      @id @default(autoincrement())
  name         String
  release_date DateTime @default(now())
  songs        Song[]

  @@map("albums")
}

model Song {
  id                  Int      @id @default(autoincrement())
  title               String
  releaseDate         DateTime
  albumId             Int
  composerArtistId    Int
  productionCountryId Int
  genreId             Int
  concertHallId       Int

  album             Album             @relation(fields: [albumId], references: [id])
  composerArtist    ComposerArtist    @relation(fields: [composerArtistId], references: [id])
  productionCountry ProductionCountry @relation(fields: [productionCountryId], references: [id])
  genre             Genre             @relation(fields: [genreId], references: [id])
  concertHall       ConcertHall       @relation(fields: [concertHallId], references: [id])

  @@map("songs")
}

model ComposerArtist {
  id         Int      @id @default(autoincrement())
  name       String
  birth_date DateTime @default(dbgenerated("'1970-01-01T00:00:00.000Z'"))
  country_id Int      @default(1)
  songs      Song[]

  country ProductionCountry @relation(fields: [country_id], references: [id])

  @@map("composers_artists")
}

model ProductionCountry {
  id             Int              @id @default(autoincrement())
  name           String
  country_code   String           @default("N/A")
  songs          Song[]
  ComposerArtist ComposerArtist[]

  @@map("production_countries")
}

model Genre {
  id          Int    @id @default(autoincrement())
  name        String
  description String @default("")
  songs       Song[]

  @@map("genre")
}

model ConcertHall {
  id       Int    @id @default(autoincrement())
  name     String
  location String
  capacity Int    @default(100)
  songs    Song[]

  @@map("concert_hall")
}
